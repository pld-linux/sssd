diff -ur sssd-1.6.1-o/src/providers/krb5/krb5_child.c sssd-1.6.1/src/providers/krb5/krb5_child.c
--- sssd-1.6.1-o/src/providers/krb5/krb5_child.c	2011-08-29 09:39:05.000000000 -0600
+++ sssd-1.6.1/src/providers/krb5/krb5_child.c	2011-10-16 00:46:34.000000000 -0600
@@ -527,7 +527,7 @@
             break;
         }
 
-        kerr = krb5_free_keytab_entry_contents(kr->ctx, &entry);
+        kerr = krb5_kt_free_entry(kr->ctx, &entry);
         if (kerr != 0) {
             DEBUG(1, ("Failed to free keytab entry.\n"));
         }
@@ -575,7 +575,7 @@
     if (krb5_kt_close(kr->ctx, keytab) != 0) {
         DEBUG(1, ("krb5_kt_close failed"));
     }
-    if (krb5_free_keytab_entry_contents(kr->ctx, &entry) != 0) {
+    if (krb5_kt_free_entry(kr->ctx, &entry) != 0) {
         DEBUG(1, ("Failed to free keytab entry.\n"));
     }
     if (principal != NULL) {
@@ -1178,7 +1178,7 @@
 static krb5_error_code get_tgt_times(krb5_context ctx, const char *ccname,
                                      krb5_principal server_principal,
                                      krb5_principal client_principal,
-                                     krb5_ticket_times *tgtt)
+                                     krb5_times *tgtt)
 {
     krb5_error_code krberr;
     krb5_ccache ccache = NULL;
@@ -1231,7 +1231,7 @@
     krb5_error_code kerr;
     char *ccname;
     char *server_name;
-    krb5_ticket_times tgtt;
+    krb5_times tgtt;
     krb5_keytab keytab = NULL;
     krb5_principal client_princ = NULL;
     krb5_principal server_princ = NULL;
@@ -1407,11 +1407,11 @@
     /* A prompter is used to catch messages about when a password will
      * expired. The library shall not use the prompter to ask for a new password
      * but shall return KRB5KDC_ERR_KEY_EXP. */
-    krb5_get_init_creds_opt_set_change_password_prompt(kr->options, 0);
+    /*krb5_get_init_creds_opt_set_change_password_prompt(kr->options, 0);
     if (kerr != 0) {
         KRB5_DEBUG(1, kerr);
         goto failed;
-    }
+    }*/
 
     lifetime_str = getenv(SSSD_KRB5_RENEWABLE_LIFETIME);
     if (lifetime_str == NULL) {
diff -ur sssd-1.6.1-o/src/providers/krb5/krb5_utils.c sssd-1.6.1/src/providers/krb5/krb5_utils.c
--- sssd-1.6.1-o/src/providers/krb5/krb5_utils.c	2011-08-29 09:39:05.000000000 -0600
+++ sssd-1.6.1/src/providers/krb5/krb5_utils.c	2011-10-16 00:47:16.000000000 -0600
@@ -435,10 +435,10 @@
     }
 
     server_name = talloc_asprintf(NULL, "krbtgt/%.*s@%.*s",
-                                  krb5_princ_realm(ctx, client_princ)->length,
-                                  krb5_princ_realm(ctx, client_princ)->data,
-                                  krb5_princ_realm(ctx, client_princ)->length,
-                                  krb5_princ_realm(ctx, client_princ)->data);
+                                  strlen(krb5_princ_realm(ctx, client_princ)),
+                                  krb5_princ_realm(ctx, client_princ),
+                                  strlen(krb5_princ_realm(ctx, client_princ)),
+                                  krb5_princ_realm(ctx, client_princ));
     if (server_name == NULL) {
         kerr = KRB5_CC_NOMEM;
         DEBUG(1, ("talloc_asprintf failed.\n"));
diff -ur sssd-1.6.1-o/src/providers/ldap/ldap_child.c sssd-1.6.1/src/providers/ldap/ldap_child.c
--- sssd-1.6.1-o/src/providers/ldap/ldap_child.c	2011-08-29 09:39:05.000000000 -0600
+++ sssd-1.6.1/src/providers/ldap/ldap_child.c	2011-10-16 00:46:34.000000000 -0600
@@ -279,16 +279,7 @@
         goto done;
     }
 
-    krberr = krb5_get_time_offsets(context, &kdc_time_offset, &kdc_time_offset_usec);
-    if (krberr) {
-        DEBUG(2, ("Failed to get KDC time offset: %s\n",
-                  sss_krb5_get_error_message(context, krberr)));
-        kdc_time_offset = 0;
-    } else {
-        if (kdc_time_offset_usec > 0) {
-            kdc_time_offset++;
-        }
-    }
+    kdc_time_offset = 0;
 
     krberr = 0;
     *ccname_out = ccname;
diff -ur sssd-1.6.1-o/src/util/sss_krb5.c sssd-1.6.1/src/util/sss_krb5.c
--- sssd-1.6.1-o/src/util/sss_krb5.c	2011-08-29 09:39:05.000000000 -0600
+++ sssd-1.6.1/src/util/sss_krb5.c	2011-10-16 00:46:34.000000000 -0600
@@ -164,9 +164,8 @@
         }
 
         if (_realm) {
-            *_realm = talloc_asprintf(mem_ctx, "%.*s",
-                                      krb5_princ_realm(ctx, client_princ)->length,
-                                      krb5_princ_realm(ctx, client_princ)->data);
+            char * princ = krb5_principal_get_realm(krb_ctx, client_princ);
+            *_realm = talloc_asprintf(mem_ctx, "%.*s", strlen(princ), princ);
             if (!*_realm) {
                 DEBUG(1, ("talloc_asprintf failed"));
                 if (_principal) talloc_zfree(*_principal);
@@ -322,7 +321,7 @@
             found = true;
         }
         free(kt_principal);
-        krberr = krb5_free_keytab_entry_contents(context, &entry);
+        krberr = krb5_kt_free_entry(context, &entry);
         if (krberr) {
             /* This should never happen. The API docs for this function
              * specify only success for this function
@@ -466,7 +465,7 @@
             break;
         }
 
-        kerr = krb5_free_keytab_entry_contents(ctx, &entry);
+        kerr = krb5_kt_free_entry(ctx, &entry);
         if (kerr != 0) {
             DEBUG(1, ("Failed to free keytab entry.\n"));
         }
@@ -504,7 +503,7 @@
     kerr = 0;
 
 done:
-    kerr_d = krb5_free_keytab_entry_contents(ctx, &entry);
+    kerr_d = krb5_kt_free_entry(ctx, &entry);
     if (kerr_d != 0) {
         DEBUG(1, ("Failed to free keytab entry.\n"));
     }
